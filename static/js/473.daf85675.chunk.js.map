{"version":3,"file":"static/js/473.daf85675.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.js","services/getMoviesInformation.js"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const CastList = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 20px;\n`\n\nexport const CastCard = styled.div`\nwidth: 170px;\nbackground-color: darkgrey;\nborder-radius: 4px;\nborder: .1px solid #80808042 ;\noverflow: hidden;\n`\n\nexport const CastPhoto = styled.img`\nwidth: 170px;\nheight: 255px;\n`","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCast } from '../../services/getMoviesInformation';\nimport NoPhoto from '../../assets/no-photo.png';\nimport { CastList, CastCard, CastPhoto } from './Cast.styled';\n\nconst Cast = () => {\n  const [moviesCast, setMoviesCast] = useState([]);\n  const { moviesID } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await getMoviesCast(moviesID);\n        setMoviesCast(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [moviesID]);\n\n  return (\n    <CastList>\n      {moviesCast.length === 0 ? (\n        <p>There are no cast.</p>\n      ) : (\n        moviesCast.map(moviesCast => (\n          <CastCard key={moviesCast.id}>\n            <CastPhoto\n              width={170}\n              src={\n                moviesCast.profile_path\n                  ? `https://image.tmdb.org/t/p/original/${moviesCast.profile_path}`\n                  : NoPhoto\n              }\n              alt=\"\"\n            />\n            <p>Name:{moviesCast.original_name}</p>\n            <p>Character: {moviesCast.character}</p>\n          </CastCard>\n        ))\n      )}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n};\n\nexport const getPopularMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get(\"/trending/movie/day\", {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movies\");\n  }\n};\n\nexport const getMoviesByQuery = async (query) => {\n  try {\n    const urlParam = `/search/movie?query=${query}&`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie\");\n  }\n};\n\nexport const getMoviesDetailsById = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie with that name\");\n  }\n};\n\nexport const getMoviesCast = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    throw new Error(\"Oops, there is no cast movie\");\n  }\n};\n\nexport const getMoviesReviews = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    throw new Error(\"Oops, we don`t have any reviews\");\n  }\n};\n"],"names":["CastList","styled","div","_templateObject","_taggedTemplateLiteral","CastCard","_templateObject2","CastPhoto","img","_templateObject3","_useState","useState","_useState2","_slicedToArray","moviesCast","setMoviesCast","moviesID","useParams","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getMoviesCast","sent","t0","console","log","message","stop","_jsx","children","length","map","_jsxs","width","src","profile_path","concat","NoPhoto","alt","original_name","character","id","axios","defaults","baseURL","params","api_key","include_adult","getPopularMovies","_ref","page","_yield$axios$get","_args","arguments","undefined","get","abrupt","Error","apply","getMoviesByQuery","_ref2","_callee2","query","urlParam","_yield$axios$get2","_context2","_x","getMoviesDetailsById","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getMoviesReviews","_ref5","_callee5","_yield$axios$get5","_context5","results","_x4"],"sourceRoot":""}