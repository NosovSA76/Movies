{"version":3,"file":"static/js/182.8aa929ee.chunk.js","mappings":"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","sources":["components/MoviDetails/MovieDetails.styled.jsx","components/MoviDetails/MovieDetails.js","services/getMoviesInformation.js"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const MoviesCard = styled.section`\ndisplay: flex;\ngap: 20px;\n` \n\nexport const MoviesPoster = styled.img`\n\n`\n\nexport const MoviesInformation = styled.div`\n\n`\n\nexport const MoviesName = styled.h2`\n\n`\nexport const MoviesInfoText = styled.p`\n\n`\n\nexport const MoviesInfoTitle = styled.h3`\n`\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport {\n  useParams,\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { getMoviesDetailsById } from '../../services/getMoviesInformation';\nimport NoPoster from '../../assets/no-poster.jpg';\nimport {\n  MoviesCard,\n  MoviesPoster,\n  MoviesInformation,\n  MoviesName,\n  MoviesInfoText,\n  MoviesInfoTitle,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [moviesInfo, setMoviesInfo] = useState({});\n  const { moviesID } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await getMoviesDetailsById(moviesID);\n        setMoviesInfo(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [moviesID]);\n\n  console.log(location);\n\n  const date = new Date(moviesInfo.release_date);\n  const year = date.getFullYear();\n  const score = Math.round(moviesInfo.vote_average * 10);\n  const overview = moviesInfo.overview;\n  const genres = moviesInfo.genres;\n  console.log('location From MovieDetal: ', location);\n\n  const navigate = useNavigate();\n\n  const handleMoveBack = () => {\n    if (location.state) {\n      navigate(location.state.from);\n      return;\n    }\n\n    navigate('/');\n  };\n\n  return (\n    <>\n      <button onClick={() => handleMoveBack()}>\n        <BsArrowLeft />\n        Go back\n      </button>\n\n      <MoviesCard>\n        <MoviesPoster\n          width={170}\n          src={\n            moviesInfo.poster_path\n              ? `https://image.tmdb.org/t/p/original/${moviesInfo.poster_path}`\n              : NoPoster\n          }\n          alt=\"\"\n        />\n        <MoviesInformation>\n          <MoviesName>\n            {moviesInfo.title} {year}\n          </MoviesName>\n          <MoviesInfoText>User score {score} %</MoviesInfoText>\n          <MoviesInfoTitle>Overview</MoviesInfoTitle>\n          <MoviesInfoText>{overview}</MoviesInfoText>\n          <MoviesInfoTitle>Genres</MoviesInfoTitle>\n          {genres &&\n            genres.map(genre => <span key={genre.id}>{genre.name}, </span>)}\n        </MoviesInformation>\n      </MoviesCard>\n      <ul>\n        <li>\n          <Link\n            to=\"cast\"\n            state={{\n              from: location.state.from,\n            }}\n          >\n            Casts\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"review\"\n            state={{\n              from: location.state.from,\n            }}\n          >\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet></Outlet>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n};\n\nexport const getPopularMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get(\"/trending/movie/day\", {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movies\");\n  }\n};\n\nexport const getMoviesByQuery = async (query) => {\n  try {\n    const urlParam = `/search/movie?query=${query}&`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie\");\n  }\n};\n\nexport const getMoviesDetailsById = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie with that name\");\n  }\n};\n\nexport const getMoviesCast = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    throw new Error(\"Oops, there is no cast movie\");\n  }\n};\n\nexport const getMoviesReviews = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    throw new Error(\"Oops, we don`t have any reviews\");\n  }\n};\n"],"names":["MoviesCard","styled","section","_templateObject","_taggedTemplateLiteral","MoviesPoster","img","_templateObject2","MoviesInformation","div","_templateObject3","MoviesName","h2","_templateObject4","MoviesInfoText","p","_templateObject5","MoviesInfoTitle","h3","_templateObject6","_useState","useState","_useState2","_slicedToArray","moviesInfo","setMoviesInfo","moviesID","useParams","location","useLocation","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getMoviesDetailsById","sent","t0","console","log","message","stop","year","Date","release_date","getFullYear","score","Math","round","vote_average","overview","genres","navigate","useNavigate","_jsxs","_Fragment","children","onClick","state","from","_jsx","BsArrowLeft","width","src","poster_path","concat","NoPoster","alt","title","map","genre","name","id","Link","to","Outlet","axios","defaults","baseURL","params","api_key","include_adult","getPopularMovies","_ref","page","_yield$axios$get","_args","arguments","length","undefined","get","abrupt","Error","apply","getMoviesByQuery","_ref2","_callee2","query","urlParam","_yield$axios$get2","_context2","_x","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getMoviesCast","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getMoviesReviews","_ref5","_callee5","_yield$axios$get5","_context5","results","_x4"],"sourceRoot":""}