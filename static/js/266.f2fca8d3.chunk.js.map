{"version":3,"file":"static/js/266.f2fca8d3.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.js","pages/Home.js","services/getMoviesInformation.js"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const FilmName = styled.p`\nfont-weight: 600;\ntext-align: center;\nwidth: 130px;\n`\n\nexport const MovePreview = styled.div`\ndisplay: flex;\nwidth: 200px;\nbackground-color: silver;\nborder-radius: 10px;\nalign-items: center;\n`\n\nexport const HomePageSection = styled.section`\n display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n` ","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport NoPoster from '../../assets/no-poster.jpg';\nimport { FilmName, MovePreview, HomePageSection } from './MoviesList.styled';\n\nconst MoviesList = ({ trendFilms }) => {\n  const [arrayList, setArrayList] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    setArrayList(trendFilms);\n  }, [trendFilms]);\n\n  return (\n    <HomePageSection>\n      {arrayList.map(item => (\n        <Link\n          style={{ textDecoration: 'none', color: 'black' }}\n          to={\n            location.pathname.includes('movies')\n              ? `${location.pathname}/${item.id}`\n              : `movies/${item.id}`\n          }\n          key={item.id}\n        >\n          <MovePreview>\n            <img\n              width={70}\n              src={\n                item.poster_path\n                  ? `https://image.tmdb.org/t/p/original/${item.poster_path}`\n                  : NoPoster\n              }\n              alt=\"\"\n            />\n            <FilmName>{item.title}</FilmName>\n          </MovePreview>\n        </Link>\n      ))}\n    </HomePageSection>\n  );\n};\n\nMoviesList.propTypes = {\n  trendFilms: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import React from 'react';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport { getPopularMovies } from '../services/getMoviesInformation';\n\nconst popular = await getPopularMovies();\n\nconst Home = () => {\n  return <MoviesList trendFilms={popular.results}></MoviesList>;\n};\n\nexport default Home;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n};\n\nexport const getPopularMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get(\"/trending/movie/day\", {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movies\");\n  }\n};\n\nexport const getMoviesByQuery = async (query) => {\n  try {\n    const urlParam = `/search/movie?query=${query}&`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie\");\n  }\n};\n\nexport const getMoviesDetailsById = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie with that name\");\n  }\n};\n\nexport const getMoviesCast = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    throw new Error(\"Oops, there is no cast movie\");\n  }\n};\n\nexport const getMoviesReviews = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    throw new Error(\"Oops, we don`t have any reviews\");\n  }\n};\n"],"names":["FilmName","styled","p","_templateObject","_taggedTemplateLiteral","MovePreview","div","_templateObject2","HomePageSection","section","_templateObject3","_ref","trendFilms","_useState","useState","_useState2","_slicedToArray","arrayList","setArrayList","location","useLocation","useEffect","_jsx","children","map","item","Link","style","textDecoration","color","to","pathname","includes","concat","id","_jsxs","width","src","poster_path","NoPoster","alt","title","popular","getPopularMovies","MoviesList","results","axios","defaults","baseURL","params","api_key","include_adult","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","_yield$axios$get","data","_args","arguments","wrap","_context","prev","next","length","undefined","get","sent","abrupt","t0","Error","stop","apply","getMoviesByQuery","_ref2","_callee2","query","urlParam","_yield$axios$get2","_context2","_x","getMoviesDetailsById","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getMoviesCast","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getMoviesReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}