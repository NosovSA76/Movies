{"version":3,"file":"static/js/182.b14e326a.chunk.js","mappings":"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","sources":["components/MoviDetails/MovieDetails.styled.jsx","components/MoviDetails/MovieDetails.js","services/getMoviesInformation.js"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const MoviesCard = styled.section`\ndisplay: flex;\ngap: 20px;\n` \n\nexport const MoviesPoster = styled.img`\n\n`\n\nexport const MoviesInformation = styled.div`\n\n`\n\nexport const MoviesName = styled.h2`\n\n`\nexport const MoviesInfoText = styled.p`\n\n`\n\nexport const MoviesInfoTitle = styled.h3`\n`\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Link, Outlet } from 'react-router-dom';\nimport { getMoviesDetailsById } from '../../services/getMoviesInformation';\nimport NoPoster from '../../assets/no-poster.jpg';\nimport {\n  MoviesCard,\n  MoviesPoster,\n  MoviesInformation,\n  MoviesName,\n  MoviesInfoText,\n  MoviesInfoTitle,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [moviesInfo, setMoviesInfo] = useState({});\n  const { MoviesID } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await getMoviesDetailsById(MoviesID);\n        setMoviesInfo(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [MoviesID]);\n\n  const date = new Date(moviesInfo.release_date);\n  const year = date.getFullYear();\n  const score = Math.round(moviesInfo.vote_average * 10);\n  const overview = moviesInfo.overview;\n  const genres = moviesInfo.genres;\n\n  return (\n    <>\n      <MoviesCard>\n        <MoviesPoster\n          width={170}\n          src={\n            moviesInfo.poster_path\n              ? `https://image.tmdb.org/t/p/original/${moviesInfo.poster_path}`\n              : NoPoster\n          }\n          alt=\"\"\n        />\n        <MoviesInformation>\n          <MoviesName>\n            {moviesInfo.title} {year}\n          </MoviesName>\n          <MoviesInfoText>User score {score} %</MoviesInfoText>\n          <MoviesInfoTitle>Overview</MoviesInfoTitle>\n          <MoviesInfoText>{overview}</MoviesInfoText>\n          <MoviesInfoTitle>Genres</MoviesInfoTitle>\n          {genres &&\n            genres.map(genre => <span key={genre.id}>{genre.name}, </span>)}\n        </MoviesInformation>\n      </MoviesCard>\n      <ul>\n        <li>\n          <Link to=\"cast\">Casts</Link>\n        </li>\n        <li>\n          <Link to=\"review\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet></Outlet>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n};\n\nexport const getPopularMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get(\"/trending/movie/day\", {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movies\");\n  }\n};\n\nexport const getMoviesByQuery = async (query) => {\n  try {\n    const urlParam = `/search/movie?query=${query}&`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie\");\n  }\n};\n\nexport const getMoviesDetailsById = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie with that name\");\n  }\n};\n\nexport const getMoviesCast = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    throw new Error(\"Oops, there is no cast movie\");\n  }\n};\n\nexport const getMoviesReviews = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    throw new Error(\"Oops, we don`t have any reviews\");\n  }\n};\n"],"names":["MoviesCard","styled","section","_templateObject","_taggedTemplateLiteral","MoviesPoster","img","_templateObject2","MoviesInformation","div","_templateObject3","MoviesName","h2","_templateObject4","MoviesInfoText","p","_templateObject5","MoviesInfoTitle","h3","_templateObject6","_useState","useState","_useState2","_slicedToArray","moviesInfo","setMoviesInfo","MoviesID","useParams","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getMoviesDetailsById","sent","t0","console","log","message","stop","year","Date","release_date","getFullYear","score","Math","round","vote_average","overview","genres","_jsxs","_Fragment","children","_jsx","width","src","poster_path","concat","NoPoster","alt","title","map","genre","name","id","Link","to","Outlet","axios","defaults","baseURL","params","api_key","include_adult","getPopularMovies","_ref","page","_yield$axios$get","_args","arguments","length","undefined","get","abrupt","Error","apply","getMoviesByQuery","_ref2","_callee2","query","urlParam","_yield$axios$get2","_context2","_x","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getMoviesCast","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getMoviesReviews","_ref5","_callee5","_yield$axios$get5","_context5","results","_x4"],"sourceRoot":""}