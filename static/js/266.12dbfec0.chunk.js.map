{"version":3,"file":"static/js/266.12dbfec0.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.js","pages/Home.js","services/getMoviesInformation.js"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const FilmName = styled.p`\nfont-weight: 600;\ntext-align: center;\nwidth: 130px;\n`\n\nexport const MovePreview = styled.div`\ndisplay: flex;\nwidth: 200px;\nbackground-color: silver;\nborder-radius: 10px;\nalign-items: center;\n`\n\nexport const HomePageSection = styled.section`\n display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n` ","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport NoPoster from '../../assets/no-poster.jpg';\nimport { FilmName, MovePreview, HomePageSection } from './MoviesList.styled';\n\nconst MoviesList = ({ trendFilms }) => {\n  const [arrayList, setArrayList] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const promises = trendFilms.map(item => {\n      if (!item.poster_path) {\n        return Promise.resolve();\n      }\n\n      return new Promise(resolve => {\n        const img = new Image();\n        img.src = `https://image.tmdb.org/t/p/original/${item.poster_path}`;\n        img.onload = () => resolve();\n        img.onerror = () => resolve();\n      });\n    });\n\n    Promise.all(promises)\n      .then(() => {\n        setLoaded(true);\n      })\n      .catch(() => {\n        console.log('Error loading images');\n      });\n\n    setArrayList(trendFilms);\n  }, [trendFilms]);\n\n  const createMovieDetailsURL = movieID => {\n    return `/movies/${movieID}`;\n  };\n\n  return (\n    loaded && (\n      <HomePageSection>\n        {arrayList.map(item => (\n          <Link\n            style={{ textDecoration: 'none', color: 'black' }}\n            to={createMovieDetailsURL(item.id)}\n            state={{\n              from: location,\n            }}\n            key={item.id}\n          >\n            <MovePreview>\n              <img\n                width={70}\n                src={\n                  item.poster_path\n                    ? `https://image.tmdb.org/t/p/original/${item.poster_path}`\n                    : NoPoster\n                }\n                alt=\"\"\n                onError={e => {\n                  e.target.src = NoPoster;\n                }}\n              />\n              <FilmName>{item.title}</FilmName>\n            </MovePreview>\n          </Link>\n        ))}\n      </HomePageSection>\n    )\n  );\n};\n\nMoviesList.propTypes = {\n  trendFilms: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import React, { useEffect, useState } from 'react';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport { getPopularMovies } from '../services/getMoviesInformation';\n\nconst Home = () => {\n  const [popular, setPopular] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await getPopularMovies();\n        setPopular(data.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(true);\n      }\n    })();\n  }, []);\n\n  return (\n    <div>{loading ? <MoviesList trendFilms={popular} /> : <div></div>}</div>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n};\n\nexport const getPopularMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get(\"/trending/movie/day\", {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movies\");\n  }\n};\n\nexport const getMoviesByQuery = async (query) => {\n  try {\n    const urlParam = `/search/movie?query=${query}&`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie\");\n  }\n};\n\nexport const getMoviesDetailsById = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie with that name\");\n  }\n};\n\nexport const getMoviesCast = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    throw new Error(\"Oops, there is no cast movie\");\n  }\n};\n\nexport const getMoviesReviews = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    throw new Error(\"Oops, we don`t have any reviews\");\n  }\n};\n"],"names":["FilmName","styled","p","_templateObject","_taggedTemplateLiteral","MovePreview","div","_templateObject2","HomePageSection","section","_templateObject3","_ref","trendFilms","_useState","useState","_useState2","_slicedToArray","arrayList","setArrayList","_useState3","_useState4","loaded","setLoaded","location","useLocation","useEffect","promises","map","item","poster_path","Promise","resolve","img","Image","src","concat","onload","onerror","all","then","catch","console","log","_jsx","children","Link","style","textDecoration","color","to","movieID","id","state","from","_jsxs","width","NoPoster","alt","onError","e","target","title","popular","setPopular","loading","setLoading","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getPopularMovies","sent","results","t0","message","finish","stop","MoviesList","axios","defaults","baseURL","params","api_key","include_adult","page","_yield$axios$get","_args","arguments","length","undefined","get","abrupt","Error","apply","getMoviesByQuery","_ref2","_callee2","query","urlParam","_yield$axios$get2","_context2","_x","getMoviesDetailsById","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getMoviesCast","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getMoviesReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}