{"version":3,"file":"static/js/514.968eb58c.chunk.js","mappings":"mOAEaA,EAAcC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,UAGvBC,EAAcJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,UAGvBI,EAAaP,EAAAA,GAAOQ,EAACC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,U,SC4BlC,EA/BgB,WACd,IAAAO,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GACxBI,GAAaC,EAAAA,EAAAA,MAAbD,SAaR,OAXAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEsBC,EAAAA,EAAAA,IAAiBZ,GAAU,KAAD,EAAvCO,EAAIE,EAAAI,KACVd,EAAcQ,GAAME,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEpBM,QAAQC,IAAIP,EAAAK,GAAMG,SAAS,yBAAAR,EAAAS,OAAA,GAAAZ,EAAA,iBAL/BH,EAQF,GAAG,CAACH,KAGFmB,EAAAA,EAAAA,KAACpC,EAAW,CAAAqC,SACa,IAAtBtB,EAAWuB,QACVF,EAAAA,EAAAA,KAAA,KAAAC,SAAG,0BAEHtB,EAAWwB,KAAI,SAAAxB,GAAU,OACvByB,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEG,EAAAA,EAAAA,MAACnC,EAAW,CAAAgC,SAAA,CAAC,WAAStB,EAAW0B,WACjCL,EAAAA,EAAAA,KAAC5B,EAAU,CAAA6B,SAAEtB,EAAW2B,YAFjB3B,EAAW4B,GAGf,KAKf,C,sLChCAC,EAAAA,EAAMC,SAASC,QAAO,+BACtBF,EAAAA,EAAMC,SAASE,OAAS,CACtBC,QAAQ,mCACRC,eAAe,GAGV,IAAMC,EAAgB,eAAAC,GAAA/B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA6B,EAAAC,EAAA7B,EAAA8B,EAAAC,UAAA,OAAAlC,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAe,OAARwB,EAAIE,EAAAhB,OAAA,QAAAkB,IAAAF,EAAA,GAAAA,EAAA,GAAG,EAAC5B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEpBgB,EAAAA,EAAMa,IAAI,sBAAuB,CACtDV,OAAQ,CACNK,KAAAA,KAED,KAAD,EAJU,OAIVC,EAAA3B,EAAAI,KAJMN,EAAI6B,EAAJ7B,KAAIE,EAAAgC,OAAA,SAKLlC,GAAI,aAAAE,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEL,IAAIiC,MAAM,4BAA4B,KAAD,oBAAAjC,EAAAS,OAAA,GAAAZ,EAAA,kBAE9C,kBAX4B,OAAA4B,EAAAS,MAAA,KAAAL,UAAA,KAahBM,EAAgB,eAAAC,GAAA1C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyC,EAAOC,GAAK,IAAAC,EAAAC,EAAA1C,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,OAEK,OAFLuC,EAAAxC,KAAA,EAElCsC,EAAQ,uBAAAG,OAA0BJ,EAAK,KAAAG,EAAAvC,KAAA,EACtBgB,EAAAA,EAAMa,IAAIQ,GAAU,KAAD,EAA9B,OAA8BC,EAAAC,EAAArC,KAAlCN,EAAI0C,EAAJ1C,KAAI2C,EAAAT,OAAA,SACLlC,GAAI,aAAA2C,EAAAxC,KAAA,EAAAwC,EAAApC,GAAAoC,EAAA,SAEL,IAAIR,MAAM,2BAA2B,KAAD,oBAAAQ,EAAAhC,OAAA,GAAA4B,EAAA,kBAE7C,gBAR4BM,GAAA,OAAAP,EAAAF,MAAA,KAAAL,UAAA,KAUhBe,EAAoB,eAAAC,GAAAnD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkD,EAAOC,GAAO,IAAAC,EAAAlD,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAAhD,KAAA,EAAAgD,EAAA/C,KAAA,EAEvBgB,EAAAA,EAAMa,IAAI,SAADW,OAAUK,IAAW,KAAD,EAAxC,OAAwCC,EAAAC,EAAA7C,KAA5CN,EAAIkD,EAAJlD,KAAImD,EAAAjB,OAAA,SACLlC,GAAI,aAAAmD,EAAAhD,KAAA,EAAAgD,EAAA5C,GAAA4C,EAAA,SAEL,IAAIhB,MAAM,0CAA0C,KAAD,oBAAAgB,EAAAxC,OAAA,GAAAqC,EAAA,kBAE5D,gBAPgCI,GAAA,OAAAL,EAAAX,MAAA,KAAAL,UAAA,KASpBsB,EAAa,eAAAC,GAAA1D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyD,EAAON,GAAO,IAAAO,EAAAxD,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,cAAAqD,EAAAtD,KAAA,EAAAsD,EAAArD,KAAA,EAEhBgB,EAAAA,EAAMa,IAAI,SAADW,OAAUK,EAAO,aAAY,KAAD,EAAhD,OAAgDO,EAAAC,EAAAnD,KAApDN,EAAIwD,EAAJxD,KAAIyD,EAAAvB,OAAA,SACLlC,EAAK0D,MAAI,aAAAD,EAAAtD,KAAA,EAAAsD,EAAAlD,GAAAkD,EAAA,SAEV,IAAItB,MAAM,gCAAgC,KAAD,oBAAAsB,EAAA9C,OAAA,GAAA4C,EAAA,kBAElD,gBAPyBI,GAAA,OAAAL,EAAAlB,MAAA,KAAAL,UAAA,KASb1B,EAAgB,eAAAuD,GAAAhE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA+D,EAAOZ,GAAO,IAAAa,EAAA9D,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAA3D,MAAA,cAAA2D,EAAA5D,KAAA,EAAA4D,EAAA3D,KAAA,EAEnBgB,EAAAA,EAAMa,IAAI,SAADW,OAAUK,EAAO,aAAY,KAAD,EAAhD,OAAgDa,EAAAC,EAAAzD,KAApDN,EAAI8D,EAAJ9D,KAAI+D,EAAA7B,OAAA,SACLlC,EAAKgE,SAAO,aAAAD,EAAA5D,KAAA,EAAA4D,EAAAxD,GAAAwD,EAAA,SAEb,IAAI5B,MAAM,mCAAmC,KAAD,oBAAA4B,EAAApD,OAAA,GAAAkD,EAAA,kBAErD,gBAP4BI,GAAA,OAAAL,EAAAxB,MAAA,KAAAL,UAAA,I","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.js","services/getMoviesInformation.js"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const ReviewsList = styled.ul`\n`\n\nexport const ReviewTitle = styled.h3`\n`\n\nexport const ReviewText = styled.p`\n`","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesReviews } from '../../services/getMoviesInformation';\nimport { ReviewsList, ReviewTitle, ReviewText } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviesInfo, setReviesInfo] = useState([]);\n  const { MoviesID } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await getMoviesReviews(MoviesID);\n        setReviesInfo(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [MoviesID]);\n\n  return (\n    <ReviewsList>\n      {reviesInfo.length === 0 ? (\n        <p>There are no reviews.</p>\n      ) : (\n        reviesInfo.map(reviesInfo => (\n          <li key={reviesInfo.id}>\n            <ReviewTitle>Author: {reviesInfo.author}</ReviewTitle>\n            <ReviewText>{reviesInfo.content}</ReviewText>\n          </li>\n        ))\n      )}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n};\n\nexport const getPopularMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get(\"/trending/movie/day\", {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movies\");\n  }\n};\n\nexport const getMoviesByQuery = async (query) => {\n  try {\n    const urlParam = `/search/movie?query=${query}&`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie\");\n  }\n};\n\nexport const getMoviesDetailsById = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie with that name\");\n  }\n};\n\nexport const getMoviesCast = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    throw new Error(\"Oops, there is no cast movie\");\n  }\n};\n\nexport const getMoviesReviews = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    throw new Error(\"Oops, we don`t have any reviews\");\n  }\n};\n"],"names":["ReviewsList","styled","ul","_templateObject","_taggedTemplateLiteral","ReviewTitle","h3","_templateObject2","ReviewText","p","_templateObject3","_useState","useState","_useState2","_slicedToArray","reviesInfo","setReviesInfo","MoviesID","useParams","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getMoviesReviews","sent","t0","console","log","message","stop","_jsx","children","length","map","_jsxs","author","content","id","axios","defaults","baseURL","params","api_key","include_adult","getPopularMovies","_ref","page","_yield$axios$get","_args","arguments","undefined","get","abrupt","Error","apply","getMoviesByQuery","_ref2","_callee2","query","urlParam","_yield$axios$get2","_context2","concat","_x","getMoviesDetailsById","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getMoviesCast","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","_ref5","_callee5","_yield$axios$get5","_context5","results","_x4"],"sourceRoot":""}